@page "/"

@using DataAccessLibrary
@using System.Globalization

@inject IDataAccessLayer dataAccess
<h1>Ticker prices this month</h1>

<p>Enter a valid ticker symbol and a graph will be made using its prices in the last 30 or so days.</p>

@if (Month == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-lg-12 my-lg-auto">
                <RadzenTemplateForm Data="@stringValue">
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <RadzenFieldset Text="Ticker symbol">
                                <div class="row">
                                    <div class="col-md-8">
                                        <input style="width: 100%;" Name="Ticker symbol" @bind="@stringValue" @bind:event="onchange" />
                                    </div>
                                </div>
                            </RadzenFieldset>
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
                            <input type="button" value="Get prices" @onclick="GetNewPrice" />
                        </div>
                    </div>
                </RadzenTemplateForm>
                <RadzenChart>
                    <RadzenLineSeries Smooth="@smooth" Data="@Month" Title="@TickerTarget" CategoryProperty="Date" LineType="LineType.Dashed" ValueProperty="Price">
                        <RadzenMarkers MarkerType="MarkerType.Square" />
                    </RadzenLineSeries>
                    <!--Didn't have time to figure out how to get the step to work so I appoligize for-->
                    <!--the dates blurring together however they can be seen if you hover over the data points-->
                    <RadzenCategoryAxis Padding="40" Formatter="FormatAsMonth" Step="5" />
                    <RadzenValueAxis Formatter="FormatAsUSD">
                        <RadzenGridLines Visible="true" />
                        <RadzenAxisTitle Text="Price in USD" />
                    </RadzenValueAxis>
                </RadzenChart>
            </div>
        </div>
    </div>

}

@code {
    private string stringValue { get; set; }
    string TickerTarget = "ABNB:NASDAQ";

    bool smooth = false;
    private OneMonth[] Month;

    protected override async Task OnInitializedAsync()
    {
        Month = await dataAccess.GetPriceTrends(TickerTarget);
    }

    async Task GetNewPrice()
    {
        TickerTarget = stringValue;
        Month = await dataAccess.GetPriceTrends(TickerTarget);
        this.StateHasChanged();
    }

    private void SetValue(string value)
    {
        stringValue = value;
    }

    string FormatAsMonth(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("dd/MM");
        }

        return string.Empty;
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C2", CultureInfo.CreateSpecificCulture("en-US"));
    }




}
